// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Cell = require("./Cell.bs.js");
var Util = require("./Util.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var BasicPart = require("./BasicPart.bs.js");
var Belt_List = require("rescript/lib/js/belt_List.js");

var getBase = BasicPart.Part.getBase;

var getIndex = BasicPart.Part.getIndex;

var getLength = Curry.__1(getBase);

function isValid(p) {
  if (1 <= Curry._1(getIndex, p)) {
    return Curry._1(getIndex, p) <= Curry._1(getBase, p);
  } else {
    return false;
  }
}

function nthCell(p, n) {
  var b = Curry._1(getBase, p);
  var c = Curry._1(getIndex, p);
  if (1 <= n && n <= b && isValid(p)) {
    return {
            base: b,
            index: (Math.imul(b, n) - b | 0) + c | 0
          };
  }
  
}

function getCells(p) {
  var b = Curry._1(getBase, p);
  var oneToBase = Util.oneToN(b);
  if (isValid(p)) {
    return Belt_List.keepMap(oneToBase, (function (param) {
                  return nthCell(p, param);
                }));
  } else {
    return /* [] */0;
  }
}

function hasCell(p, cell) {
  return Belt_List.has(getCells(p), cell, Caml_obj.caml_equal);
}

function columnOfCell(cell) {
  return {
          base: Curry._1(Cell.getBase, cell),
          index: Cell.columnIndex(cell)
        };
}

var sameSquare = BasicPart.Part.sameSquare;

exports.getBase = getBase;
exports.getIndex = getIndex;
exports.sameSquare = sameSquare;
exports.isValid = isValid;
exports.getLength = getLength;
exports.getCells = getCells;
exports.hasCell = hasCell;
exports.nthCell = nthCell;
exports.columnOfCell = columnOfCell;
/* No side effect */
